!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
FUNCNAMESZ	./GetFreq.cpp	4;"	d	file:
GET_FREQ_HH	./GetFreq.h	2;"	d
ICA	./inliner.cpp	/^			InlineCostAnalysis *ICA;$/;"	m	class:__anon1::MyInliner	file:	access:public
ID	./inliner.cpp	/^			static char ID;$/;"	m	class:__anon1::MyInliner	file:	access:public
ID	./inliner.cpp	/^char MyInliner::ID = 0;$/;"	m	class:MyInliner	file:
MyInliner	./inliner.cpp	/^			MyInliner():Inliner(ID),ICA(0){} 	$/;"	f	class:__anon1::MyInliner	access:public	signature:()
MyInliner	./inliner.cpp	/^	class MyInliner:public Inliner {$/;"	c	namespace:__anon1	file:	inherits:Inliner
MyInliner::ID	./inliner.cpp	/^char MyInliner::ID = 0;$/;"	m	class:MyInliner	file:
__anon1::MyInliner	./inliner.cpp	/^	class MyInliner:public Inliner {$/;"	c	namespace:__anon1	file:	inherits:Inliner
__anon1::MyInliner::ICA	./inliner.cpp	/^			InlineCostAnalysis *ICA;$/;"	m	class:__anon1::MyInliner	file:	access:public
__anon1::MyInliner::ID	./inliner.cpp	/^			static char ID;$/;"	m	class:__anon1::MyInliner	file:	access:public
__anon1::MyInliner::MyInliner	./inliner.cpp	/^			MyInliner():Inliner(ID),ICA(0){} 	$/;"	f	class:__anon1::MyInliner	access:public	signature:()
__anon1::MyInliner::alwaysInline	./inliner.cpp	/^			InlineCost alwaysInline(CallSite CS);$/;"	p	class:__anon1::MyInliner	file:	access:private	signature:(CallSite CS)
__anon1::MyInliner::alwaysInline	./inliner.cpp	/^	InlineCost MyInliner::alwaysInline(CallSite CS) {$/;"	f	class:__anon1::MyInliner	signature:(CallSite CS)
__anon1::MyInliner::getAnalysisUsage	./inliner.cpp	/^			virtual void getAnalysisUsage(AnalysisUsage &AN) const; $/;"	p	class:__anon1::MyInliner	file:	access:public	signature:(AnalysisUsage &AN) const
__anon1::MyInliner::getAnalysisUsage	./inliner.cpp	/^	void MyInliner::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon1::MyInliner	signature:(AnalysisUsage &AU) const
__anon1::MyInliner::getInlineCost	./inliner.cpp	/^			virtual InlineCost getInlineCost(CallSite cs);$/;"	p	class:__anon1::MyInliner	file:	access:public	signature:(CallSite cs)
__anon1::MyInliner::getInlineCost	./inliner.cpp	/^	InlineCost MyInliner::getInlineCost(CallSite cs) {$/;"	f	class:__anon1::MyInliner	signature:(CallSite cs)
__anon1::MyInliner::runOnSCC	./inliner.cpp	/^			virtual bool runOnSCC(CallGraphSCC &scc);$/;"	p	class:__anon1::MyInliner	file:	access:public	signature:(CallGraphSCC &scc)
__anon1::MyInliner::runOnSCC	./inliner.cpp	/^	bool MyInliner::runOnSCC(CallGraphSCC &scc) {$/;"	f	class:__anon1::MyInliner	signature:(CallGraphSCC &scc)
alwaysInline	./inliner.cpp	/^			InlineCost alwaysInline(CallSite CS);$/;"	p	class:__anon1::MyInliner	file:	access:private	signature:(CallSite CS)
alwaysInline	./inliner.cpp	/^	InlineCost MyInliner::alwaysInline(CallSite CS) {$/;"	f	class:__anon1::MyInliner	signature:(CallSite CS)
child	./GetFreq.cpp	/^	char * child;$/;"	m	struct:edge	file:	access:public
edge	./GetFreq.cpp	/^typedef struct edge{$/;"	s	file:
edge	./GetFreq.cpp	/^} edge;$/;"	t	typeref:struct:edge	file:
edge::child	./GetFreq.cpp	/^	char * child;$/;"	m	struct:edge	file:	access:public
edge::next	./GetFreq.cpp	/^	struct edge *next;$/;"	m	struct:edge	typeref:struct:edge::edge	file:	access:public
edge::parent	./GetFreq.cpp	/^	char * parent;$/;"	m	struct:edge	file:	access:public
edge::visited	./GetFreq.cpp	/^	int visited;$/;"	m	struct:edge	file:	access:public
getAnalysisUsage	./inliner.cpp	/^			virtual void getAnalysisUsage(AnalysisUsage &AN) const; $/;"	p	class:__anon1::MyInliner	file:	access:public	signature:(AnalysisUsage &AN) const
getAnalysisUsage	./inliner.cpp	/^	void MyInliner::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:__anon1::MyInliner	signature:(AnalysisUsage &AU) const
getInlineCost	./inliner.cpp	/^			virtual InlineCost getInlineCost(CallSite cs);$/;"	p	class:__anon1::MyInliner	file:	access:public	signature:(CallSite cs)
getInlineCost	./inliner.cpp	/^	InlineCost MyInliner::getInlineCost(CallSite cs) {$/;"	f	class:__anon1::MyInliner	signature:(CallSite cs)
getcount	./GetFreq.cpp	/^int getcount(const char*filename,const char* from,const char *to){$/;"	f	signature:(const char*filename,const char* from,const char *to)
getcount	./GetFreq.h	/^int getcount(const char*filename,const char* from,const char *to) ;$/;"	p	signature:(const char*filename,const char* from,const char *to)
list	./GetFreq.cpp	/^edge * list=NULL;$/;"	v
load_profile	./GetFreq.cpp	/^void load_profile(const char* filename)$/;"	f	signature:(const char* filename)
load_profile	./GetFreq.cpp	/^void load_profile(const char*);$/;"	p	file:	signature:(const char*)
next	./GetFreq.cpp	/^	struct edge *next;$/;"	m	struct:edge	typeref:struct:edge::edge	file:	access:public
parent	./GetFreq.cpp	/^	char * parent;$/;"	m	struct:edge	file:	access:public
runOnSCC	./inliner.cpp	/^			virtual bool runOnSCC(CallGraphSCC &scc);$/;"	p	class:__anon1::MyInliner	file:	access:public	signature:(CallGraphSCC &scc)
runOnSCC	./inliner.cpp	/^	bool MyInliner::runOnSCC(CallGraphSCC &scc) {$/;"	f	class:__anon1::MyInliner	signature:(CallGraphSCC &scc)
visited	./GetFreq.cpp	/^	int visited;$/;"	m	struct:edge	file:	access:public
